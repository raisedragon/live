<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd		"
		default-lazy-init="true">

    <description>Spring公共配置</description>
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.winit.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>		
	</context:component-scan>
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.winit.vms.*.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/vms/*Mapper.xml" />
	</bean>

	<!-- 自动扫描映射器 -->
	<!-- spring与mybatis整合配置，扫描所有dao -->	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.winit.vms.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<bean id="springMessageLocator" class="com.winit.common.spring.SpringMessageLocator" lazy-init="false"></bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
      <property name="basenames">
		<list>
            <value>i18n/message</value>
        </list>
       </property>
    </bean>
	
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.winit.vms.*.dao" />
		<property name="annotationClass" value="com.winit.common.orm.mybatis.MyBatisRepo"/>
	</bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="submit*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="batch*" propagation="REQUIRED" />
            <tx:method name="handle*" propagation="REQUIRED" />
            <tx:method name="writeBack*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" />
            <tx:method name="fetch*" propagation="REQUIRED" />
            <tx:method name="pre*" propagation="REQUIRED"/>
            
            <tx:method name="count*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="query*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="*" isolation="DEFAULT" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="managerOperation" expression="execution(* com.winit.vms.*.manager.*.*.*(..))" />
        <aop:pointcut id="serviceOperation" expression="execution(* com.winit.vms.*.service.*.*(..))" />
        <aop:pointcut id="shipmentOperation" expression="execution(* com.winit.vms.*.adaptor.*.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="managerOperation"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="shipmentOperation"/>
    </aop:config>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" order="0" />
	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- hibernate validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	
<!-- 	<bean id="appUtil" class="com.winit.vms.core.utils.AppUtil" lazy-init="false"/> -->
	
	<bean id="idGenerator" class="com.winit.vms.core.identity.DefaultIdGenerator">
		<constructor-arg index="0" value="1"></constructor-arg>
		<constructor-arg index="1" value="1"></constructor-arg>
	</bean>

	<bean id="idGeneratorUtil" class="com.winit.vms.core.identity.UniqueIdUtil" lazy-init="false">
		<property name="idGenerator" ref="idGenerator" />
	</bean>
	
	<bean id="configUtil" class="com.winit.vms.core.utils.ConfigUtil">
	</bean>
	
    <!-- 生产环境 -->
	<beans profile="prod">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath:/application.properties"/>
		<import resource="classpath:/dubbo.xml" />
		<import resource="classpath:/dataSource.xml" />
		<import resource="classpath:/spring-quartz.xml" />
	</beans>
	
	<!-- 开发环境 -->
	<beans profile="dev">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath:/application.dev.properties"/>
		<import resource="classpath:/dubbo.xml" />
		<import resource="classpath:/dataSource.xml" />
		<import resource="classpath:/spring-quartz.xml" />
	</beans>

	<!-- functional test环境 -->
	<beans profile="func">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath:/application.func.properties" />
		<import resource="classpath:/dubbo.xml" />
		<import resource="classpath:/dataSource.xml" />
		<import resource="classpath:/spring-quartz.xml" />
	</beans>
	
	<!-- junit测试环境 -->
	<beans profile="test">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath:/application.test.properties" />
 		<import resource="classpath:/dubbo.xml" />
		<import resource="classpath:/dataSource.xml" />
			<import resource="classpath:/spring-quartz.xml" />
	</beans>
</beans>