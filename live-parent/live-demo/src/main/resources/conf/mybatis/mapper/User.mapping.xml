<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdcc.live.identity.dao.UserDao">
	<resultMap id="UserResultMap" type="com.gdcc.live.identity.entity.User">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="account" column="ACCOUNT_" jdbcType="VARCHAR"/>
		<result property="password" column="PASSWORD_" jdbcType="VARCHAR"/>
		<result property="firstName" column="FIRST_NAME_" jdbcType="VARCHAR"/>
		<result property="lastName" column="LAST_NAME_" jdbcType="VARCHAR"/>
		<result property="gender" column="GENDER_" jdbcType="VARCHAR"/>
		<result property="birthday" column="BIRTHDAY_" jdbcType="DATE"/>
		<result property="created" column="CREATED_" jdbcType="TIMESTAMP"/>
		<result property="createdBy" column="CREATED_BY_" jdbcType="VARCHAR"/>
		<result property="updated" column="UPDATED_" jdbcType="TIMESTAMP"/>
		<result property="updatedBy" column="UPDATED_BY_" jdbcType="VARCHAR"/>
		<result property="isActive" column="IS_ACTIVE_" jdbcType="CHAR"/>
		<result property="orgId" column="ORG_ID_" jdbcType="VARCHAR"/>
		<result property="isDeleted" column="IS_DELETED_" jdbcType="CHAR"/>
	</resultMap>
	
	<sql id="columns">
			ID_,
			ACCOUNT_,
			PASSWORD_,
			FIRST_NAME_,
			LAST_NAME_,
			GENDER_,
			BIRTHDAY_,
			CREATED_,
			CREATED_BY_,
			UPDATED_,
			UPDATED_BY_,
			IS_ACTIVE_,
			ORG_ID_,
			IS_DELETED_
	</sql>
	
	<insert id="add" parameterType="com.gdcc.live.identity.entity.User">
		INSERT INTO id_user
		(
			ID_,
			ACCOUNT_,
			PASSWORD_,
			FIRST_NAME_,
			LAST_NAME_,
			GENDER_,
			BIRTHDAY_,
			CREATED_,
			CREATED_BY_,
			UPDATED_,
			UPDATED_BY_,
			IS_ACTIVE_,
			ORG_ID_,
			IS_DELETED_
		)
		VALUES 
		(
			#{id,jdbcType=VARCHAR}, 
			#{account,jdbcType=VARCHAR}, 
			#{password,jdbcType=VARCHAR}, 
			#{firstName,jdbcType=VARCHAR}, 
			#{lastName,jdbcType=VARCHAR}, 
			#{gender,jdbcType=VARCHAR}, 
			#{birthday,jdbcType=DATE}, 
			#{created,jdbcType=TIMESTAMP}, 
			#{createdBy,jdbcType=VARCHAR}, 
			#{updated,jdbcType=TIMESTAMP}, 
			#{updatedBy,jdbcType=VARCHAR}, 
			#{isActive,jdbcType=CHAR}, 
			#{orgId,jdbcType=VARCHAR}, 
			#{isDeleted,jdbcType=CHAR}
		)
	</insert>
	
	<select id="get"   parameterType="String" resultMap="UserResultMap">
		SELECT <include refid="columns" /> FROM id_user 
		WHERE 
			IS_DELETED_='0'
			AND ID_=#{id}
	</select>
	
	<select 
	    id="find" parameterType="com.winit.common.query.Searchable"
	    resultMap="UserResultMap"
	    timeout="60000">
		SELECT <include refid="columns" /> FROM id_user
	</select>
	
	<update id="update" parameterType="com.gdcc.live.identity.entity.User">
		UPDATE id_user SET
		ID_=#{id,jdbcType=VARCHAR},
		ACCOUNT_=#{account,jdbcType=VARCHAR},
		PASSWORD_=#{password,jdbcType=VARCHAR},
		FIRST_NAME_=#{firstName,jdbcType=VARCHAR},
		LAST_NAME_=#{lastName,jdbcType=VARCHAR},
		GENDER_=#{gender,jdbcType=VARCHAR},
		BIRTHDAY_=#{birthday,jdbcType=DATE},
		CREATED_=#{created,jdbcType=TIMESTAMP},
		CREATED_BY_=#{createdBy,jdbcType=VARCHAR},
		UPDATED_=#{updated,jdbcType=TIMESTAMP},
		UPDATED_BY_=#{updatedBy,jdbcType=VARCHAR},
		IS_ACTIVE_=#{isActive,jdbcType=CHAR},
		ORG_ID_=#{orgId,jdbcType=VARCHAR},
		IS_DELETED_=#{isDeleted,jdbcType=CHAR}
		WHERE
		ID_=#{id}
	</update>
	
	<delete id="delete"  parameterType="String">
		DELETE FROM id_user 
		WHERE
		ID_=#{id}
	</delete>
	
	<update id="tombstoned"  parameterType="String">
		<bind name="currentTime" value="@com.gdcc.live.core.security.SCUtils@currentDate()"/>
		<bind name="currentUserId" value="@com.gdcc.live.core.security.SCUtils@currentUserId()"/>
		UPDATE id_user SET
			IS_DELETED_='1',
			UPDATED=#{currentTime,jdbcType=TIMESTAMP},
			UPDATEDBY=#{currentUserId,jdbcType=VARCHAR}
		WHERE
			ID_=#{id}
	</update>
	
	<update id="disable"  parameterType="String">
		<bind name="currentTime" value="@com.gdcc.live.core.security.SCUtils@currentDate()"/>
		<bind name="currentUserId" value="@com.gdcc.live.core.security.SCUtils@currentUserId()"/>
		UPDATE id_user SET
			IS_ACTIVE_='0',
			UPDATED=#{currentTime,jdbcType=TIMESTAMP},
			UPDATEDBY=#{currentUserId,jdbcType=VARCHAR}
		WHERE
			ID_=#{id}
	</update>
	<update id="enable"  parameterType="String">
		<bind name="currentTime" value="@com.gdcc.live.core.security.SCUtils@currentDate()"/>
		<bind name="currentUserId" value="@com.gdcc.live.core.security.SCUtils@currentUserId()"/>
		UPDATE id_user SET
			IS_ACTIVE_='1',
			UPDATED=#{currentTime,jdbcType=TIMESTAMP},
			UPDATEDBY=#{currentUserId,jdbcType=VARCHAR}
		WHERE
			ID_=#{id}
	</update>
	
	<!-- Operate by criteria -->
	
	<select id="selectByCriteria" parameterType="com.gdcc.live.identity.query.UserSelectQuery" resultMap="UserResultMap">
		SELECT 
			RES.ID_,
			RES.ACCOUNT_,
			RES.PASSWORD_,
			RES.FIRST_NAME_,
			RES.LAST_NAME_,
			RES.GENDER_,
			RES.BIRTHDAY_,
			RES.CREATED_,
			RES.CREATED_BY_,
			RES.UPDATED_,
			RES.UPDATED_BY_,
			RES.IS_ACTIVE_,
			RES.ORG_ID_,
			RES.IS_DELETED_
		<include refid="selectByCriteriaSql" />
		<include refid="orderByClauseSql"/>
	</select>
	
	<select id="selectCountByCriteria" parameterType="com.gdcc.live.identity.query.UserSelectQuery" resultType="Long">
		SELECT count(1)
		<include refid="selectByCriteriaSql" />
	</select>

	<sql id="selectByCriteriaSql">
		from id_user RES
		<include refid="criteriaSql"/>
	</sql>
	<update id="updateByUpdateQuery" parameterType="com.gdcc.live.identity.query.UserUpdateQuery">
		UPDATE id_user RES
		<include refid="updateDataCaluseSql"/>
		<include refid="criteriaSql"/>
	</update>
	
	
	<sql id="criteriaSql">
		<where>
			IS_DELETED_='0'
			<if test="criteria.oreds.size()==1">
				<trim prefix="AND" >
					<include refid="oredCriteriaSql"/>
				</trim>
			
			</if>
			<if test="criteria.oreds.size()>1">
				<trim prefix="AND (" suffix=")" >
					<include refid="oredCriteriaSql"/>
				</trim>
			</if>
		</where>
	</sql>
		
		
	<sql id="oredCriteriaSql">
		<foreach  collection="criteria.oreds" item="ored" separator="or">
			<if test="ored.valid">
				<if test="ored.criterions.size()==1">
					<trim prefixOverrides="and">
						<include refid="criterionSql"/>
					</trim>
				</if>
				<if test="ored.criterions.size()>1">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<include refid="criterionSql"/>
					</trim>
				</if>
			</if>
		</foreach>
	</sql>
	
	<sql id="criterionSql">
		<foreach collection="ored.criterions" item="criterion">
			<choose>
				<when test="criterion.noValue">
					and RES.${criterion.condition}
				</when>
				<when test="criterion.singleValue">
					and RES.${criterion.condition} #{criterion.value}
				</when>
				<when test="criterion.betweenValue">
					and RES.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
				</when>
				<when test="criterion.listValue">
					and RES.${criterion.condition}
					<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
						#{listItem}
					</foreach>
				</when>
			</choose>
		</foreach>
	</sql>
		
	<sql id="updateDataCaluseSql">
		<set>   
			<foreach collection="updateClause.dataClauses" item="clause" separator=",">
				${clause.property} #{clause.value}
			</foreach>
		</set>
	</sql>
	
	
	<sql id="orderByClauseSql">
		ORDER BY 
			${orderBy}
	</sql>
	
</mapper>